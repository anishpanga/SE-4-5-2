package reports;

import screens.HomePage;
import entityClasses.Employee;
import entityClasses.Project;
import javax.persistence.EntityManager;
import javax.swing.DefaultComboBoxModel;
import entityClasses.WorkedHours;
import importData.SystemData;
import java.util.Calendar;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.JOptionPane;
import importData.ConnectionManager;
import java.util.List;
import java.util.ArrayList;
import java.sql.Date;
import java.text.SimpleDateFormat;
import javax.persistence.Query;
import javax.swing.table.DefaultTableModel;

public class WorkedHoursReport extends javax.swing.JPanel {    
    JFrame  panelHolder;
    SystemData systemData;
    DefaultTableModel tableModel;
    Calendar selectedWeekStartDate;
    
    public WorkedHoursReport(JFrame  panelHolder, SystemData systemData) {
        this.panelHolder = panelHolder;
        this.systemData = systemData;  
        initComponents();   
        selectedWeekStartDate = Calendar.getInstance();
        selectedWeekStartDate.set(Calendar.DAY_OF_WEEK, 1);
        
        Calendar calendar = (Calendar)selectedWeekStartDate.clone();
	calendar.set(Calendar.DAY_OF_WEEK, 1);
        Date weekStartDate = new Date(calendar.getTimeInMillis());
        calendar.set(Calendar.DAY_OF_WEEK, 7);
        Date weekEndDate = new Date(calendar.getTimeInMillis());
        jLabel10.setText("Worked Hours: From "+new SimpleDateFormat("MM-dd-yyyy").format(weekStartDate)
                +" To "+new SimpleDateFormat("MM-dd-yyyy").format(weekEndDate));
        
        ConnectionManager cm = new ConnectionManager();
        EntityManager em = cm.getEntityManager();
        Date startDate = new Date(weekStartDate.getTime());
        Date endDate = new Date(weekEndDate.getTime());
        Query query = em.createQuery("Select wh from WorkedHours wh where " 
            + " wh.date between '"+startDate+"' and '"+ endDate+"' order by wh.projectID, "
                + "wh.empName, wh.date");
        List<WorkedHours> hoursList = query.getResultList();
        
        Object[] columnNames = new Object[10];
        columnNames[0] ="Project Name";
        columnNames[1] ="Employee";
        columnNames[9] ="Total";
        for (int i = 7; i >0; ) {
            Date date = new Date(calendar.getTimeInMillis());
            columnNames[i+1] = new SimpleDateFormat("MM-dd-yyyy").format(date);
            --i;
            calendar.set(Calendar.DAY_OF_WEEK, i);           
        }
        Object[][] rowData = new Object[hoursList.size()][10];  
        int i=0;
        int j =0;
        int size = hoursList.size();
        while(j< size){
            rowData[i][0] = hoursList.get(i+0).getProject().getName();
            rowData[i][1] = hoursList.get(i+0).getEmpName();
            rowData[i][2] = hoursList.get(i+0).getHoursWorked();
            rowData[i][3] = hoursList.get(i+1).getHoursWorked();
            rowData[i][4] = hoursList.get(i+2).getHoursWorked();
            rowData[i][5] = hoursList.get(i+3).getHoursWorked();
            rowData[i][6] = hoursList.get(i+4).getHoursWorked();
            rowData[i][7] = hoursList.get(i+5).getHoursWorked();
            rowData[i][8] = hoursList.get(i+6).getHoursWorked();
            int tot = hoursList.get(i+0).getHoursWorked()+  hoursList.get(i+1).getHoursWorked()
                            + hoursList.get(i+2).getHoursWorked()+ hoursList.get(i+3).getHoursWorked()
                            + hoursList.get(i+4).getHoursWorked()+ hoursList.get(i+5).getHoursWorked()
                            + hoursList.get(i+6).getHoursWorked();

            rowData[i][9] = tot;        
            j = j+7;
            ++i;
        }
        
        tableModel = new DefaultTableModel(rowData, columnNames){
            @Override
            public boolean isCellEditable(int row, int column) {                
                    return false;
            }
         };
        jTable1.setModel(tableModel);
        jTable1 = new JTable(tableModel);
        jScrollPane1.setViewportView(jTable1);
        jTable1.setRowHeight(25);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(130);
        cm.close();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        label1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setName(""); // NOI18N
        jTable1.setRowHeight(25);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        label1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label1.setText("Worked Hours Report");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Approve Worked Hours:  From 08/07/2016 To 08/13/2016");

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Previous Week");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Next Week");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(jButton1)
                .addGap(62, 62, 62)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(cancelButton)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(3, 3, 3)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        panelHolder.setTitle("Home Page");
        panelHolder.getContentPane().removeAll();
        panelHolder.getContentPane().add(new HomePage(panelHolder, systemData, false));
        panelHolder.getContentPane().revalidate();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void updateTable(){          
        Calendar calendar = (Calendar)selectedWeekStartDate.clone();
	calendar.set(Calendar.DAY_OF_WEEK, 1);
        Date weekStartDate = new Date(calendar.getTimeInMillis());
        calendar.set(Calendar.DAY_OF_WEEK, 7);
        Date weekEndDate = new Date(calendar.getTimeInMillis());
        jLabel10.setText("Worked Hours: From "+new SimpleDateFormat("MM-dd-yyyy").format(weekStartDate)
                +" To "+new SimpleDateFormat("MM-dd-yyyy").format(weekEndDate));
        
        ConnectionManager cm = new ConnectionManager();
        EntityManager em = cm.getEntityManager();
        Date startDate = new Date(weekStartDate.getTime());
        Date endDate = new Date(weekEndDate.getTime());
        Query query = em.createQuery("Select wh from WorkedHours wh where " 
            + " wh.date between '"+startDate+"' and '"+ endDate+"' order by wh.projectID, "
                + "wh.empName, wh.date, wh.");
        List<WorkedHours> hoursList = query.getResultList();
        
        Object[] columnNames = new Object[10];
        columnNames[0] ="Project Name";
        columnNames[1] ="Employee";
        columnNames[9] ="Total";
        for (int i = 7; i >0; ) {
            Date date = new Date(calendar.getTimeInMillis());
            columnNames[i+1] = new SimpleDateFormat("MM-dd-yyyy").format(date);
            --i;
            calendar.set(Calendar.DAY_OF_WEEK, i);           
        }
        Object[][] rowData = new Object[hoursList.size()][9];  
        int i=0;
        int j =0;
        int size = hoursList.size();
        while(j< size){
            rowData[i][0] = hoursList.get(i+0).getProject().getName();
            rowData[i][1] = hoursList.get(i+0).getEmpName();
            rowData[i][2] = hoursList.get(i+0).getHoursWorked();
            rowData[i][3] = hoursList.get(i+1).getHoursWorked();
            rowData[i][4] = hoursList.get(i+2).getHoursWorked();
            rowData[i][5] = hoursList.get(i+3).getHoursWorked();
            rowData[i][6] = hoursList.get(i+4).getHoursWorked();
            rowData[i][7] = hoursList.get(i+5).getHoursWorked();
            rowData[i][8] = hoursList.get(i+6).getHoursWorked();
            int tot = hoursList.get(i+0).getHoursWorked()+  hoursList.get(i+1).getHoursWorked()
                            + hoursList.get(i+2).getHoursWorked()+ hoursList.get(i+3).getHoursWorked()
                            + hoursList.get(i+4).getHoursWorked()+ hoursList.get(i+5).getHoursWorked()
                            + hoursList.get(i+6).getHoursWorked();

            rowData[i][9] = tot;        
            j = j+7;
            ++i;
        }
        
        tableModel = new DefaultTableModel(rowData, columnNames){
            @Override
            public boolean isCellEditable(int row, int column) {                
                    return false;
            }
         };
        jTable1.setModel(tableModel);
        jTable1 = new JTable(tableModel);
        jScrollPane1.setViewportView(jTable1);
        jTable1.setRowHeight(25);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(130);
        cm.close();
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        selectedWeekStartDate.add(Calendar.DAY_OF_WEEK, -7);
        updateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        selectedWeekStartDate.add(Calendar.DAY_OF_WEEK, 7);
        updateTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel label1;
    // End of variables declaration//GEN-END:variables
}
